// REFERENCES
// https://css-tricks.com/creating-a-3d-cube-image-gallery/
// http://codepen.io/chinchang/pen/lLzyB

////////////////////////////////////////////
// 		SCENE
////////////////////////////////////////////

//- What we ideally want is that the perspective never changes and remains constant no matter what element we transform.

//- How do we fix this? We wrap all our elements with another DIV to which give the perspective property:

.scene {
	perspective: 1000px;
	width: $cubeWidth;
	height: $cubeHeight;
	text-align: center;
	display: inline-block;
	@include marginPaddingReset1;
}

////////////////////////////////////////////
// 		END SCENE
////////////////////////////////////////////


////////////////////////////////////////////
// 		CUBE
////////////////////////////////////////////

.cube {
	display: inline-block;
	transition: all 0.85s cubic-bezier(0.175,0.885,0.320,1.275);

	text-align: center;
	position: relative;
	width: 100%;
	height: 100%;
	transform-style: preserve-3d;
	transform: rotateX(-15deg) rotateY(15deg);
}

.cube-face {
	overflow: hidden;
	position: absolute;

	border: 1px solid $borderColour;
	background: $basebackcolor;
	box-shadow: inset 0 0 60px rgba(0, 0, 0, 0.1),
	0 0 50px rgba(0, 0, 0, 0.3);
	color: $baseFontColor;
	line-height: $cubeWidth;
	opacity: 0.8;
}

////////////////////////////////////////////
// 		END CUBE
////////////////////////////////////////////



// Z-Axis
// to bring the front face closer to the eye, translate it on the z-axis
// As you can see, the Z-axis is coming out of the screen straight from the element. Hence, when we translate the front face positively on the Z-axis, it appears closer to us.
// Note how the axes rotated along with element. This means that Z-axis is no longer coming straight towards us. Instead it is in the direction of the element. So if were to move it along the Z-axis now, it would move in the direction in which the element is facing.
// KEY POINT:  Remember, We rotate the face so that it faces the required direction then translate on Z-axis.

////////////////////////////////////////////
// 		FRONT FACE
////////////////////////////////////////////

// Nothing to rotate here. Simple move the front face forward by half the cube's length.
.cube-face-front {
	background: yellow;
	width: $cubeWidth;
	height: $cubeHeight;
	transform: translate3d(0, 0, $cubeDepth / 2);
}

////////////////////////////////////////////
// 		END FRONT FACE
////////////////////////////////////////////

////////////////////////////////////////////
// 		BACK FACE
////////////////////////////////////////////

// The back face will face in the opposite direction to the front one. Which means it needs to be rotated by 180 degrees about the Y-axis before translating
.cube-face-back {
	background: orange;
  	// transform: rotateY(180deg) translate3d(0, 0, $cubeSize/2);
  	width: $cubeWidth;
	height: $cubeHeight;
	transform: rotateY(180deg) translate3d(0, 0, $cubeDepth / 2);
}

////////////////////////////////////////////
// 		END BACK FACE
////////////////////////////////////////////


////////////////////////////////////////////
// 		LEFT FACE
////////////////////////////////////////////

// we want it to face towards the left... rotate 90deg clockwise (negative rotation)

.cube-face-left {
	background: green;
  	width: $cubeDepth;
	height: $cubeHeight;
	left: 50%;
	margin-left: -$cubeDepth / 2;
	transform: rotateY(-90deg) translate3d(0, 0, $cubeWidth / 2);
}

////////////////////////////////////////////
// 		END LEFT FACE
////////////////////////////////////////////


////////////////////////////////////////////
// 		RIGHT FACE
////////////////////////////////////////////

// same as left except positive rotation

.cube-face-right {
	background: magenta;
  	// transform: rotateY(90deg) translate3d(0, 0, $cubeSize/2);
	width: $cubeDepth;
	height: $cubeHeight;
	left: 50%;
	margin-left: -$cubeDepth / 2;
	transform: rotateY(90deg) translate3d(0, 0, $cubeWidth / 2);
}

////////////////////////////////////////////
// 		END RIGHT FACE
////////////////////////////////////////////


////////////////////////////////////////////
// 		TOP FACE
////////////////////////////////////////////

// This face needs to be rotated about the X-axis by 90 degrees so that it faces upwards

.cube-face-top {
	background: blue;
	width: $cubeWidth;
	height: $cubeDepth;
	transform: rotateX(90deg) translate3d(0, 0, $cubeHeight / 2);
}

////////////////////////////////////////////
// 		END TOP FACE
////////////////////////////////////////////


////////////////////////////////////////////
// 		BOTTOM FACE
////////////////////////////////////////////

.cube-face-bottom {
	background: red;
  	width: $cubeWidth;
	height: $cubeDepth;
	transform: rotateX(-90deg) translate3d(0, 0, $cubeHeight / 2);
}

////////////////////////////////////////////
// 		END BOTTOM FACE
////////////////////////////////////////////

////////////////////////////////////////////
// 		CONTROLS FOR ROTATION OF CUBE
////////////////////////////////////////////

// using advanced selectors... when the radio button is checked rotate the .scene .cube by such and such amount

#radio-back:checked ~ .scene .cube {
  transform: rotateY(180deg);
} 
#radio-left:checked ~ .scene .cube {
  transform: rotateY(90deg);
} 
#radio-right:checked ~ .scene .cube {
  transform: rotateY(-90deg);
}
#radio-top:checked ~ .scene .cube {
  transform: rotateX(-90deg);
}  
#radio-bottom:checked ~ .scene .cube {
  transform: rotateX(90deg);
}

////////////////////////////////////////////
// 		END CONTROLS FOR ROTATION OF CUBE
////////////////////////////////////////////


////////////////////////////////////////////
// 		BACKGROUNDS FOR FACES
////////////////////////////////////////////

// Apply backgrounds
.cube-face-front {
	background: url(http://2.bp.blogspot.com/-JxKfUObT4L8/UYYaRhRNJmI/AAAAAAAAAUY/243IlIOKj2c/s320/brahama.jpg);
	background-size: 100%;
}

.cube-face-left {
	background: url(http://4.bp.blogspot.com/-HGFGdCGFTkw/UXVq6PNmS4I/AAAAAAAAAUE/hBNmVCOVlu4/s400/durga+wm.jpg);
	background-size: auto 100%;
}

.cube-face-right {
	background: url(http://2.bp.blogspot.com/-yrnBD8wJ-g0/UNRtPF8pR7I/AAAAAAAAATE/YSpLvqTNyoQ/s320/A+P+J+abdul+kalam_+swm+.jpg);
	background-size: auto 100%;
}

.cube-face-top {
	background: url(http://3.bp.blogspot.com/-mySu8dy4ux4/ULiVKS4YBbI/AAAAAAAAAR0/vBMi_4dAPDE/s400/rajiv+dixit+s.jpg);
	background-size: auto 100%;
}

.cube-face-bottom {
	background: url(http://2.bp.blogspot.com/-B9QWFtc9bVY/UHFs7y9GqkI/AAAAAAAAARI/YLDkoHYr3g4/s400/Gau+wm.jpg);
	background-size: auto 100%;
}
  
.cube-face-back {
	background: url(http://3.bp.blogspot.com/-ofufG97PpiU/UBzXu-1AisI/AAAAAAAAAP0/iDnhOh-vrb8/s400/shiv+ji.jpg);
	background-size: auto 100%;
}

////////////////////////////////////////////
// 		END BACKGROUNDS FOR FACES
////////////////////////////////////////////


